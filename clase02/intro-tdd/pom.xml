<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.circulosiete.curso.testing</groupId>
    <artifactId>clase02</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>IntroTDD-Clase02</name>
    <url>https://circulosiete.com/capacitacion/testing-java</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <junit.version>5.13.4</junit.version>
        <mockito.version>5.9.0</mockito.version>
        <assertj.version>3.27.4</assertj.version>
        <jacoco.version>0.8.9</jacoco.version>
        <surefire.version>3.3.0</surefire.version>
        <failsafe.version>3.3.0</failsafe.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mockito para mocks -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Mockito extension para JUnit 5 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- AssertJ para assertions más fluidas -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Optionally: parameterized tests support -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>
            <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>3.1.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.1.4</version>
            </plugin>
            <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.12.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.9.0</version>
            </plugin>
            <!-- Plugin JaCoCo para cobertura de código -->
            <!--                <plugin>-->
            <!--                    <groupId>org.jacoco</groupId>-->
            <!--                    <artifactId>jacoco-maven-plugin</artifactId>-->
            <!--                    <version>${jacoco.maven.plugin.version}</version>-->
            <!--                    <executions>-->
            <!--                        <execution>-->
            <!--                            <goals>-->
            <!--                                <goal>prepare-agent</goal>-->
            <!--                            </goals>-->
            <!--                        </execution>-->
            <!--                        <execution>-->
            <!--                            <id>report</id>-->
            <!--                            <phase>verify</phase>-->
            <!--                            <goals>-->
            <!--                                <goal>report</goal>-->
            <!--                            </goals>-->
            <!--                        </execution>-->
            <!--                    </executions>-->
            <!--                </plugin>-->
            <!-- JaCoCo: UT + IT + merge + report -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>

                    <!-- Preparar agente para Unit Tests (Surefire) -->
                    <execution>
                        <id>prepare-agent-ut</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                            <propertyName>argLine</propertyName>
                            <append>true</append>
                        </configuration>
                    </execution>

                    <!-- Preparar agente para Integration Tests (Failsafe) -->
                    <execution>
                        <id>prepare-agent-it</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <propertyName>argLineIT</propertyName>
                            <append>true</append>
                        </configuration>
                    </execution>

                    <!-- Reporte UT -->
                    <execution>
                        <id>report-ut</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Reporte IT -->
                    <execution>
                        <id>report-it</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Merge + Reporte combinado (UT+IT) -->
                    <execution>
                        <id>merge-and-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-merged.exec</destFile>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>jacoco-ut.exec</include>
                                        <include>jacoco-it.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- (Opcional) Reglas de cobertura para fallar el build -->
                    <!--
                    <execution>
                      <id>jacoco-check</id>
                      <phase>verify</phase>
                      <goals>
                        <goal>check</goal>
                      </goals>
                      <configuration>
                        <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
                        <rules>
                          <rule>
                            <element>BUNDLE</element>
                            <limits>
                              <limit>
                                <counter>INSTRUCTION</counter>
                                <value>COVEREDRATIO</value>
                                <minimum>0.80</minimum>
                              </limit>
                            </limits>
                          </rule>
                        </rules>
                      </configuration>
                    </execution>
                    -->
                </executions>
            </plugin>

            <!-- Surefire: Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <!-- Inyecta el agente de JaCoCo para UT -->
                    <argLine>${argLine}</argLine>
                    <!-- Patrones por defecto: *Test, *Tests, Test* -->
                </configuration>
            </plugin>


            <!-- Failsafe: Integration Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Inyecta el agente de JaCoCo para IT -->
                    <argLine>${argLineIT}</argLine>
                    <!-- Patrones por defecto: *IT, *ITCase -->
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>

        <plugins>

            <!-- Resultados de Unit Tests en el site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.3.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- Usa los resultados ya generados en verify -->
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>


            <!-- JaCoCo: reporte UT en el site -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- JaCoCo: reporte IT en el site -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- JaCoCo: reporte combinado (UT+IT) en el site -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                        <configuration>
                            <!-- Este .exec lo crea tu ejecución merge en la fase verify -->
                            <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            <title>${project.name} - JaCoCo (UT+IT)</title>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>

        </plugins>

    </reporting>
</project>
